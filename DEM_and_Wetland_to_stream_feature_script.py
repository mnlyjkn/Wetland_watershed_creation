# -*- coding: utf-8 -*-
# ---------------------------------------------------------------------------
# Test_for_Python_2.py
# Created on: 2020-11-29 19:12:44.00000
#   (generated by ArcGIS/ModelBuilder)
# Usage: Wetland streams from DEM and wetland shapefile <Wetlands_Select> 
# Description: Create streams from DEMs and a wetland shapefile.  Streams will then be used with a pour point script to create a watershed.
#DEMs are expected to be in meters for this script.  DEMs will be converted to feet in this script.
# ---------------------------------------------------------------------------

# Import modules
import arcpy
from arcpy.sa import *  #imports spatial analyst module

# Set Environment
print("Enter workspace:")  #workspace environment
w = raw_input("")
arcpy.env.workspace = w
print("Enter scratch workspace:")  #scratch workspace environment
sw = raw_input("")
arcpy.env.scratchWorkspace = sw
print("Output overwrite = True")    #enables outputs to be overwritten if performing again. Use a different workspace if you want to keep the outputs.
arcpy.env.overwriteOutput = True

#Extension Check out
arcpy.CheckOutExtension("Spatial")

# Script arguments
print("Enter wetland shapefile:")  #Shapefile input for select tool
Wetlands = raw_input("")

print("Enter the expression for selecting wetland features by FID:")  #Expression input for select tool
Wetland_Selection_Expression = raw_input("")  #example:  "FID" = 1 OR "FID" = 2

print("Enter the DEMs to be merged(such as dem1.tif;dem2.tif):")  #DEMs to be merged. If only using one DEM, input just that DEM
DEM = raw_input("") #example: dem1.tif;dem2.tif;dem3.tif

print("Enter the Mosaic DEM output location:")  #Output location of the DEM that was merged into a mosaic
Mosaic_DEM_Output_location = raw_input("")  #Probably best to use the same output as the workspace environment

print("Enter the Mosaic DEM output name with extension:")  #Output name of the merged mosaic DEM
Raster_Dataset_Name = raw_input("")     #example: Mosaic_DEM.img

print("Enter the expression for the Wetland_Flow_Value_Expression(such as Value <10000):")  #Expression input for set null tool to create Streams.tif
Wetland_Flow_Value_Expression = raw_input("")   #example VALUE < 1500

# Local variables:


# Process: Select
print("Executing Selection tool") #
Selected_wetlands = arcpy.Select_analysis(Wetlands,
                                          "Wetlands_Select",
                                          Wetland_Selection_Expression)

print("Selection tool completed, now executing Mosaic to New Raster tool") 
Mosaic_DEM = arcpy.MosaicToNewRaster_management(DEM,
                                                Mosaic_DEM_Output_location,
                                                Raster_Dataset_Name,
                                                coordinate_system_for_the_raster="",
                                                pixel_type="8_BIT_UNSIGNED",
                                                cellsize=None,
                                                number_of_bands= 1,
                                                mosaic_method="LAST",
                                                mosaic_colormap_mode="FIRST")   #

print("Mosaic to New Raster tool completed, now setting Snap raster environemnt using the Mosaic DEM")
arcpy.env.snapRaster = Raster_Dataset_Name  #snap raster environment

print("Snap raster environment set, now setting extent environemnt using the Mosaic DEM")
arcpy.env.extent = Raster_Dataset_Name   #extent environment

print("Extent environment set, now executing Feature to Raster tool")
Wetlands_Raster = arcpy.FeatureToRaster_conversion(in_features=Selected_wetlands,
                                                   field="ATTRIBUTE",
                                                   out_raster="WetlandRaster.tif",
                                                   cell_size=Raster_Dataset_Name)    #

print("Feature to Raster tool completed, now executing Set Null tool")
Set_Null_Wetlands = SetNull(in_conditional_raster=Wetlands_Raster,
                                     in_false_raster_or_constant= 1,
                                     where_clause="Count <= 100")
Set_Null_Wetlands.save("Set_Null_Wetlands.tif") #saves set null output

print("Set Null tool completed, now executing Is Null tool")
Is_Null_Wetlands = IsNull(in_raster=Set_Null_Wetlands)
Is_Null_Wetlands.save("Is_Null_Wetlands.tif") #saves is null output

print("Is Null tool completed, now executing Equal To tool")
Null_Wetlands = EqualTo(in_raster_or_constant1=Is_Null_Wetlands,
                                 in_raster_or_constant2= 0)
Null_Wetlands.save("Null_Wetlands.tif")  #saves equal to output

print("Equal To tool completed, now executing Times tool")  #converts DEM from meters to feet
DEM_Feet = Times(in_raster_or_constant1=Mosaic_DEM,
                          in_raster_or_constant2= 3.281)
DEM_Feet.save("DEM_Feet.tif")   #saves times output

print("Times tool completed, now executing Fill tool")
Filled_DEM = Fill(in_surface_raster=DEM_Feet,
                           z_limit=None)
Filled_DEM.save("Filled_DEM.tif")   #saves fill output

print("Fill tool completed, now executing Minus tool")
Wetlands_DEM = Minus(in_raster_or_constant1=Filled_DEM,
                              in_raster_or_constant2=Null_Wetlands)
Wetlands_DEM.save("Wetlands_DEM.tif")   #saves minus output

print("Minus tool completed, now executing Flow Direction tool")
Wetlands_Flow_Direction = FlowDirection(in_surface_raster=Wetlands_DEM,
                                                 force_flow="NORMAL",
                                                 out_drop_raster="",
                                                 flow_direction_type="D8")
Wetlands_Flow_Direction.save("Wetlands_Flow_Direction.tif") #saves flow direction output

print("Flow Direction tool completed, now executing Flow Accumulation tool")
Wetlands_Flow_Accumulation = FlowAccumulation(in_flow_direction_raster=Wetlands_Flow_Direction,
                                                       in_weight_raster="",
                                                       data_type="FLOAT",
                                                       flow_direction_type="D8")
Wetlands_Flow_Accumulation.save("Wetlands_Flow_Accumulation.tif")   #saves flow accumulation output

print("Flow Accumulation tool completed, now executing Set Null tool")
Streams = SetNull(in_conditional_raster=Wetlands_Flow_Accumulation,
                           in_false_raster_or_constant= 1,
                           where_clause=Wetland_Flow_Value_Expression)
Streams.save("Streams.tif") #saves set null output

print("Set Null tool completed, now executing Stream to Feature tool")
StreamToFeature(in_stream_raster=Streams,
                in_flow_direction_raster=Wetlands_Flow_Direction,
                out_polyline_features="Stream_Features",
                simplify="NO_SIMPLIFY")
